<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="10.4.0-SNAPSHOT">
    <add>
        <annotations>
            <annotation name="hygienic"/>
        </annotations>
        <type-metadata>
            <param name="type" value="module"/>
            <param name="fully-qualified-name" value="com.tibco.ep.samples.querytable.querytable_eventflowfragment"/>
        </type-metadata>
        <dynamic-variables/>
        <data name="Bids_and_Asks" shared="false" source="concrete" type="querytable">
            <param name="storage-method" value="transactional_memory"/>
            <param name="replicated" value="false"/>
            <table-schema>
                <schema>
                    <field name="symbol" type="string"/>
                    <field name="bid_price" type="double"/>
                    <field name="bid_size" type="double"/>
                </schema>
                <primary-index partitioning-key="true" type="btree">
                    <field name="symbol"/>
                </primary-index>
            </table-schema>
            <param name="truncate" value="false"/>
            <preload format="csv" mode="text"/>
            <table-partitioning>
                <param name="data-distribution-policy-name" value="dynamic"/>
                <param name="data-mapper-type" value="distributed-hash"/>
            </table-partitioning>
        </data>
        <stream name="ReadInput">
            <schema>
                <field name="symbol" type="string"/>
            </schema>
        </stream>
        <stream name="WriteInput">
            <property name="description" value="Feed from NYSE."/>
            <schema description="Feed from NYSE.">
                <field description="Timestamp as an integer" name="time_int" type="int"/>
                <field description="Stock symbol" name="symbol" type="string"/>
                <field description="Bid price in dollars" name="bid_price" type="double"/>
                <field description="Number of shares in the bid" name="bid_size" type="int"/>
                <field description="Ask price in dollars" name="ask_price" type="double"/>
                <field description="Number of shares in the ask" name="ask_size" type="int"/>
                <field description="Sequence number of this transaction" name="sequence" type="int"/>
            </schema>
        </stream>
        <box name="Query" type="query">
            <input port="1" stream="ReadInput"/>
            <output port="1" stream="out:Query_1"/>
            <dataref id="querytable" name="Bids_and_Asks"/>
            <param name="operation" value="read"/>
            <param name="where" value="primary-key"/>
            <param name="limit" value="1"/>
            <param name="key-field.0" value="symbol"/>
            <param name="key-lowerbound-value.0" value="symbol"/>
            <param name="key-lowerbound-operation.0" value="eq"/>
            <param name="key-upperbound-operation.0" value="none"/>
            <param name="write-type" value="insert"/>
            <param name="if-write-fails" value="ignore"/>
            <param name="no-match-mode" value="output-no-match-null"/>
            <param name="order-by-direction" value="none"/>
            <target-list>
                <item name="input" selection="none"/>
                <item name="current" selection="all"/>
                <item name="old" selection="none"/>
            </target-list>
            <target-list name="insert">
                <item name="input" selection="all"/>
            </target-list>
            <target-list name="update">
                <item name="input" selection="all"/>
            </target-list>
            <target-list name="no-match">
                <item name="input" selection="all"/>
            </target-list>
        </box>
        <box name="Update_Bids_and_Asks" type="query">
            <property name="description" value="Updates the Query Table based on the incoming tuple. If the new quote (bid or ask) is better than the current one, replace the row."/>
            <input port="1" stream="WriteInput"/>
            <output port="1" stream="out:Update_Bids_and_Asks_1"/>
            <dataref id="querytable" name="Bids_and_Asks"/>
            <param name="operation" value="write"/>
            <param name="where" value="primary-key"/>
            <param name="key-field.0" value="symbol"/>
            <param name="key-value.0" value="input.symbol"/>
            <param name="write-type" value="update"/>
            <param name="if-write-fails" value="insert"/>
            <param name="no-match-mode" value="output-no-match-nothing"/>
            <param name="order-by-direction" value="none"/>
            <target-list>
                <item name="input" selection="none"/>
                <item name="old" selection="none"/>
                <item name="new" selection="all"/>
                <item name="current" selection="none"/>
            </target-list>
            <target-list name="insert">
                <item name="input" selection="all"/>
            </target-list>
            <target-list name="update">
                <item name="input" selection="all"/>
            </target-list>
            <target-list name="no-match">
                <item name="input" selection="none"/>
            </target-list>
        </box>
        <box name="ReadLog" type="outputadapter">
            <input port="1" stream="out:Query_1"/>
            <output port="1" stream="ReadOutput"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.logger.Log"/>
            <param name="CaptureStrategy" value="FLATTEN"/>
            <param name="asyncEnabled" value="true"/>
            <param name="compressFrequentMessages" value="false"/>
            <param name="compressMaxWindowSize" value="5.0"/>
            <param name="customFormat" value=""/>
            <param name="customFormatExpression" value=""/>
            <param name="customFormatType" value="Basic"/>
            <param name="emitLoggedTuples" value="true"/>
            <param name="encodeSubType" value="Map"/>
            <param name="hexEncodeBlobs" value="false"/>
            <param name="includeNullFields" value="false"/>
            <param name="logLevel" value="Info"/>
            <param name="logLevelOverrideFieldName" value=""/>
            <param name="loggerFormatType" value="CSV"/>
            <param name="messageIdentifier" value="ReadLog"/>
            <param name="messageIdentifierExpression" value=""/>
            <param name="messageIdentifierType" value="Basic"/>
            <param name="messagePrefix" value="ReadLog"/>
            <param name="quoteNullStrings" value="true"/>
            <param name="timestampAsLong" value="false"/>
            <param name="timestampFormat" value="yyyy-MM-dd HH:mm:ss.SSSZ"/>
            <param name="verbose" value="true"/>
        </box>
        <box name="WriteLog" type="outputadapter">
            <input port="1" stream="out:Update_Bids_and_Asks_1"/>
            <output port="1" stream="WriteOutput"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.logger.Log"/>
            <param name="CaptureStrategy" value="FLATTEN"/>
            <param name="asyncEnabled" value="true"/>
            <param name="compressFrequentMessages" value="false"/>
            <param name="compressMaxWindowSize" value="5.0"/>
            <param name="customFormat" value=""/>
            <param name="customFormatExpression" value=""/>
            <param name="customFormatType" value="Basic"/>
            <param name="emitLoggedTuples" value="true"/>
            <param name="encodeSubType" value="Map"/>
            <param name="hexEncodeBlobs" value="false"/>
            <param name="includeNullFields" value="false"/>
            <param name="logLevel" value="Info"/>
            <param name="logLevelOverrideFieldName" value=""/>
            <param name="loggerFormatType" value="CSV"/>
            <param name="messageIdentifier" value="WriteLog"/>
            <param name="messageIdentifierExpression" value=""/>
            <param name="messageIdentifierType" value="Basic"/>
            <param name="messagePrefix" value="WriteLog"/>
            <param name="quoteNullStrings" value="true"/>
            <param name="timestampAsLong" value="false"/>
            <param name="timestampFormat" value="yyyy-MM-dd HH:mm:ss.SSSZ"/>
            <param name="verbose" value="true"/>
        </box>
        <output-stream name="ReadOutput"/>
        <output-stream name="WriteOutput">
            <property name="description" value="Emits a tuple each time there is a new best ask price for a symbol."/>
        </output-stream>
    </add>
</modify>
